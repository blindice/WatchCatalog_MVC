@using WatchCatalog_MVC.ViewModels;
@model WatchDetailsViewModel

<div id="watchList-container" style="width: 100vw; display: flex; flex-direction: column; gap: 5vh">
    <section id="watchDetails" style="height: 100vh; width: 100vw; display: flex; align-items: end; justify-content: center; padding: 0vh 6.5vw; column-gap: 5vw; padding-top: 13vh">
        <div class="@Model.GetProductAvailabilityClass()" style="width: 50%; display: flex; justify-content: center;align-self: start; height: 100%; position: relative">
            <img src="@Model.Image" style="height: 95%; border-radius: 2vh;" />
        </div>
        <div style="width: 50%;align-self: start; height: 100%; display: flex; flex-direction: column; justify-content: start; padding-right: 7vw; row-gap: 1vh">
            <div style="font-family: 'Nunito', sans-serif">
                <div><p style="font-size: 3.5vh; font-family: 'Montserrat Alternates', sans-serif; font-weight: 500">@Model.WatchName</p></div>
                <p style="font-size: 2vh; font-weight: 500">฿ @Math.Round(Model.Price, 2)</p>
                <p style="text-align: justify; font-size: 2vh;"><em>@Model.Short_description</em></p>
                <p style="text-align: justify; font-size: 2vh;">@Model.Full_Description</p>

            </div>
            <div style="margin-bottom: 2vh; display:flex; width: 100%; justify-content:space-between; column-gap: 1vw">
                <button id="btnToggle" class="@Model.ToggleButtonClass()" style="width:25%">@Model.ToggleButtonName()</button>
                <button id="btnUpdate" class="btn btn-outline-primary btn-sm" style="width:25%">Edit</button>
                <button id="btnDelete" class="btn btn-outline-primary btn-sm" style="width:25%">Delete</button>
                <a class="btn btn-outline-primary btn-sm" style="width:25%; display: flex; align-items: center; justify-content:center" href='javascript:history.go(-1)'>Back</a>
            </div>
            <div class="accordion accord" id="accordionExample">              
                <div class="accordion-item" style="font-family: 'Nunito', sans-serif">
                    <h2 class="accordion-header" id="headingTwo">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            Specifications
                        </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                        <div class="accordion-body" style="display: grid; grid-template-columns: 7vw 1fr">
                            <p style="font-size: 2vh; font-weight: 700">Caliber:</p>
                            <p style="font-size: 2vh;">@Model.Caliber</p>
                            <p style="font-size: 2vh; font-weight: 700">Chronograph:</p>
                            <p style="font-size: 2vh;">@Model.Chronograph</p>
                            <p style="font-size: 2vh; font-weight: 700">Diameter:</p>
                            <p style="font-size: 2vh;">@Model.Diameter mm</p>
                            <p style="font-size: 2vh; font-weight: 700">Weight:</p>
                            <p style="font-size: 2vh;">@Model.Weight g</p>
                            <p style="font-size: 2vh; font-weight: 700">Height:</p>
                            <p style="font-size: 2vh;">@Model.Height mm</p>
                            <p style="font-size: 2vh; font-weight: 700">Thickness:</p>
                            <p style="font-size: 2vh;">@Model.Thickness mm</p>
                        </div>
                    </div>
                </div>
                <div class="accordion-item" style="font-family: 'Nunito', sans-serif">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                            Materials
                        </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                        <div class="accordion-body" style="display: grid; grid-template-columns: 3vw 1fr">
                            <p style="font-size: 2vh; font-weight: 700">Strap:</p>
                            <p style="font-size: 2vh;">@Model.Strap</p>
                            <p style="font-size: 2vh;font-weight: 700">Jewel:</p>
                            <p style="font-size: 2vh;">@Model.Jewel</p>
                            <p style="font-size: 2vh;font-weight: 700">Case:</p>
                            <p style="font-size: 2vh;">@Model.Case</p>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <video autoplay loop muted playsinline src="~/videos/scroll2.mp4" style="position: absolute; top: 90vh; height: 10vh; z-index: -1"></video>
    </section>
    <div style="padding: 0vh 6.5vw; margin-bottom: -10vh; margin-top: 10vh"><p style="font-size: 2.5vh; font-family: 'Montserrat Alternates', sans-serif; font-weight: 500">Browse more Watches...</p></div>

    <partial name="_WatchList" />
    <partial name="_Modal" />
    <partial name="_BackToTopButton" />
</div>

@section Scripts{
    <script type="module">
        $(() => {
            //create watchlist
            // let relatedSearchStrings = ['@Model.Strap', '@Model.Jewel', '@Model.Case', '@Model.Caliber', '@Model.Chronograph']
            // const randomIndex = Math.floor(Math.random() * relatedSearchStrings.length);
            // const relatedSearchString = relatedSearchStrings[randomIndex];
            $("#btnAdd").css({ "visibility": "hidden" })
            createWatchListPartialScript()

            // modal
            $("#btnUpdate").click(() => callModalBody({ url: '@Url.Action("ModalBody")', method: "PUT", id: @Model.WatchId, submitFn: formSubmit }))


            var formSubmit = (event) => {
                event.preventDefault()
                var form = new FormData();
                form.append("image", imageFile.files[0]);
                form.append("watchname", $("#WatchName").val());
                form.append("case", $("#Case").val());
                form.append("jewel", $("#Jewel").val());
                form.append("strap", $("#Strap").val());
                form.append("caliber", $("#Caliber").val());
                form.append("full_description", $("#Full_Description").val());
                form.append("short_description", $("#Short_description").val());
                form.append("watchId", @Model.WatchId);
                form.append("Chronograph", $("#Chronograph").val());
                form.append("price", $("#Price").val());
                form.append("height", $("#Height").val());
                form.append("weight", $("#Weight").val());
                form.append("diameter", $("#Diameter").val());
                form.append("isActive", @Model.IsActive.ToString().ToLower());
                form.append("thickness", $("#Thickness").val());

                $.ajax({
                    url: "/updatewatch",
                    method: "PUT",
                    timeout: 0,
                    processData: false,
                    mimeType: "multipart/form-data",
                    contentType: false,
                    data: form,
                    error: (err) => {
                        alert(err)
                    }
                }).done(function (response) {
                    console.log(response);
                    // location.reload(true);
                });
            }

            //toggle
            $("#btnToggle").click(async () => {
                await $.ajax({
                    type: 'POST',
                    url: '/togglewatch',
                    data: JSON.stringify({ watchId: @Model.WatchId, isActive: @Model.IsActive.ToString().ToLower()}),
                    dataType: 'json',
                    contentType: "application/json",
                    success: (result) => {
                        location.reload(true);
                    },
                    error: (err) => {
                        alert(JSON.stringify(err))
                    }
                })
            })


            $("#btnDelete").click(() => {
                var settings = {
                    "url": `/deletewatch/${@Model.WatchId}`,
                    "method": "DELETE",
                    "timeout": 0,
                };

                $.ajax(settings).done(function (response) {
                    console.log(response);
                });
            })
        })
    </script>
}